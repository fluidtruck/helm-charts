{{- $top := . }}
{{- range .Values.cronjobs }}
---
apiVersion: {{ include "common.capabilities.cronjob.apiVersion" $top }}
kind: CronJob
metadata:
  name: {{ printf "%s-%s" (include "common.names.fullname" $top) .name | trunc 52 | trimSuffix "-" | quote }}
  labels: {{- include "common.labels.standard" $top | nindent 4 }}
    cronjob: {{ .name | quote }}
    {{- if $top.Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" $top.Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if $top.Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $top.Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  schedule: {{ .schedule | quote }}
  successfulJobsHistoryLimit: {{ default "0" .successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ default "0" .failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            cronjob: {{ .name | quote }}
        spec:
          restartPolicy: OnFailure
          {{- if $top.Values.containerSecurityContext.enabled }}
          securityContext: {{- omit $top.Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if or (eq "true" (include "cronjob.waitForRedis" $top)) (eq "true" (include "cronjob.waitForPostgresql" $top)) }}
          initContainers:
            {{- if eq "true" (include "cronjob.waitForRedis" $top) }}
            - name: wait-for-redis
              image: redis:alpine
              env:
                - name: REDIS_HOST
                  value: {{ include "cronjob.redisHost" $top }}
                - name: REDIS_PORT
                  value: "6379"
                - name: REDISCLI_AUTH
                  valueFrom:
                    secretKeyRef:
                      name: {{ $top.Release.Name }}-redis
                      key: redis-password
              args:
                - /mnt/redis/wait-for-redis.sh
              volumeMounts:
                - name: wait-for-redis
                  mountPath: /mnt/redis
            {{- end }}
            {{- if eq "true" (include "cronjob.waitForPostgresql" $top) }}
            - name: wait-for-postgresql
              image: postgres:alpine
              env:
                - name: POSTGRESQL_HOST
                  value: {{ include "cronjob.postgresqlHost" $top }}
                - name: POSTGRESQL_USERNAME
                  value: {{ $top.Values.postgresql.postgresqlUsername }}
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ $top.Release.Name }}-postgresql
                      key: postgresql-password
              args:
                - /mnt/postgresql/wait-for-postgresql.sh
              volumeMounts:
                - name: wait-for-postgresql
                  mountPath: /mnt/postgresql
            {{- end }}
          {{- end }}
          containers:
          - name: {{ .name | quote }}
            {{- if hasKey . "image" }}
            image: {{ include "common.images.image" (dict "imageRoot" .image) }}
            imagePullPolicy: {{ .image.pullPolicy | quote }}
            {{- else }}
            image: {{ template "cronjob.image" $top }}
            imagePullPolicy: {{ $top.Values.image.pullPolicy | quote }}
            {{- end }}
            {{- if typeIs "string" .command }}
            command:
              - sh
              - -c
              - {{ .command | quote }}
            {{- else }}
            command: {{- include "common.tplvalues.render" (dict "value" .command "context" $) | nindent 14 }}
            {{- end }}
            {{- if or $top.Values.redis.enabled (gt (len $top.Values.envVars) 0) }}
            env:
              {{- if $top.Values.redis.enabled }}
              - name: REDIS_HOST
                value: {{ include "cronjob.redisHost" $top }}
              - name: REDIS_PORT
                value: "6379"
              - name: REDIS_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: {{ $top.Release.Name }}-redis
                    key: redis-password
              {{- end }}
              {{- range $key, $value := $top.Values.envVars }}
              - name: {{ $key }}
                {{- if or (typeIs "string" $value) (typeIs "float64" $value) (typeIs "bool" $value) }}
                value: {{ include "common.tplvalues.render" (dict "value" $value "context" $) | quote }}
                {{- else }}
                {{- include "common.tplvalues.render" (dict "value" $value "context" $) | nindent 14 }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if or $top.Values.envVarsCM $top.Values.envVarsSecret }}
            envFrom:
              {{- if $top.Values.envVarsCM }}
              - configMapRef:
                  name: {{ include "common.tplvalues.render" (dict "value" $top.Values.envVarsCM "context" $) }}
              {{- end }}
              {{- if $top.Values.envVarsSecret }}
              - secretRef:
                  name: {{ include "common.tplvalues.render" (dict "value" $top.Values.envVarsSecret "context" $) }}
              {{- end }}
            {{- end }}
          {{- if or (eq "true" (include "cronjob.waitForRedis" $top)) (eq "true" (include "cronjob.waitForPostgresql" $top)) }}
          volumes:
            {{- if or (eq "true" (include "cronjob.waitForRedis" $top)) }}
            - name: wait-for-redis
              configMap:
                name: {{ template "common.names.fullname" $top }}-wait-for-redis
                defaultMode: 0777
            {{- end }}
            {{- if or (eq "true" (include "cronjob.waitForPostgresql" $top)) }}
            - name: wait-for-postgresql
              configMap:
                name: {{ template "common.names.fullname" $top }}-wait-for-postgresql
                defaultMode: 0777
            {{- end }}
          {{- end }}
{{- end }}
