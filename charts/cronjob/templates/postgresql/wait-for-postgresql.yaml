{{- if eq "true" (include "cronjob.waitForPostgresql" .) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-wait-for-postgresql
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.fluidtruck.enabled }}
    {{- include "common.labels.fluidtruck" . | nindent 4 }}
    {{- end }}
    {{- if .Values.github.enabled }}
    {{- include "common.labels.github" . | nindent 4 }}
    {{- end }}
data:
  wait-for-postgresql.sh: |
    #/bin/sh

    set -x;
    echo "Waiting for Postgres on ${DB_HOST}"

    ATTEMPTS=0
    STATUS=99

    until [ $STATUS -eq 0 ]; do
      pg_isready -d "${DB_DATABASE}" -h "${DB_HOST}" -U "${DB_USER}" &>/dev/null
      STATUS=$?

      if [ $ATTEMPTS -gt 500 ]; then
        echo "Failed to connect to Postgres."
        exit 1
      fi

      ATTEMPTS=$(($ATTEMPTS+1))
      echo "Still waiting..."
      sleep 1
    done

    echo "Connected to Postgres!"
{{- end }}
